C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE ET1
OBJECT MODULE PLACED IN ET1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ET1.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<Reg51f.h>
   2          #include<stdio.h>
   3          
   4          sbit sl1=P2^0;
   5          sbit sl2=P2^1;
   6          sbit sl3=P2^2;
   7          sbit sl4=P2^3;
   8          sbit krl1=P2^4;
   9          sbit krl2=P2^5;
  10          sbit krl3=P2^6;
  11          sbit krl4=P2^7;
  12          sbit buzz=P1^5;
  13          
  14          unsigned char disp[25]={0xfc,0x60,0xda,0xf2,0x66,0xb6,0xbe,0xe0,0xfe,0xf6,0xff,0xff,0xff,0xff,0xff,0xff,0x
             -ff,0xee,0x3e,0x9c,0x7a,0x9e,0x8e};
  15          unsigned char ascii_tab[25]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
  16          unsigned char ds1='0',ds2='0',ds3='0',ds4='0';
  17          int k,c,a,s1_over,cnt_1sl,cnt_1sh,i,stop_sw=0;
  18          int scan_no,krcount,key_code,key_ready,nkp,tb,start_buzzer,dcount,start_sw;
  19          
  20          unsigned char first,second,third,fourth,name[4];
  21          
  22          void delay(unsigned int);
  23          void display();
  24          void init();
  25          void init_timer();
  26          //void test_display();
  27          void incrementd();
  28          void disp_blank();
  29          void scanner();
  30          void adisp1();
  31          void adisp2();
  32          void adisp3();
  33          void adisp4();
  34          void buzzer();
  35          void k1();
  36          void key_release();
  37          void init_keypad();
  38          void init_display();
  39          void disp_sw();
  40          void process_a();
  41          void process_b();
  42          void process_c();
  43          void process_d();
  44          void keyprocess();
  45          void get_key();
  46          void delay_1sec();
  47          void init_delay_1sec();
  48          
  49          void initial_blink();
  50          unsigned char get_key1();
  51          
  52          void isr_t0() interrupt 1 using 1
  53          {
  54   1       init_timer();
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 2   

  55   1       delay_1sec();
  56   1       //buzzer();
  57   1       scanner();
  58   1      
  59   1       if(s1_over==1)
  60   1              {
  61   2               incrementd();
  62   2               s1_over=0;
  63   2              }
  64   1      }
  65          
  66          void main()
  67          {
  68   1        start_sw=0;
  69   1        init();
  70   1        EA=1;
  71   1      
  72   1        for (i=0;i<=3;i++)
  73   1        {
  74   2         name[i]=get_key1();
  75   2         ds4=name[0];
  76   2        ds3=name[1];
  77   2        ds2=name[2];
  78   2        ds1=name[3];
  79   2      
  80   2         key_release();
  81   2        
  82   2        }
  83   1       
  84   1      
  85   1        delay(3000);
  86   1      
  87   1        ds1=ds2=ds3=ds4='0';
  88   1        
  89   1        while(1)
  90   1        {
  91   2              get_key();
  92   2              keyprocess();   
  93   2        }  
  94   1      }
  95          
  96          void init()
  97          {
  98   1       //init_display();
  99   1       init_keypad();
 100   1       init_timer();
 101   1       init_delay_1sec();
 102   1      } 
 103          
 104          void init_timer()
 105          {
 106   1       TMOD=0x01;
 107   1       TL0=0x66;
 108   1       TH0=0x0FC;
 109   1       TR0=1;
 110   1       ET0=1;
 111   1      }
 112          
 113          void init_display()
 114          {
 115   1       ds1='9'+1;
 116   1       ds2='9'+1;
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 3   

 117   1       ds3='9'+1;
 118   1       ds4='9'+1;
 119   1      }
 120          
 121          void init_keypad()
 122          {
 123   1       krl1=1;
 124   1       krl2=1;
 125   1       krl3=1;
 126   1       krl4=1;
 127   1       start_sw=0;
 128   1       scan_no=0;
 129   1       dcount=33;
 130   1       krcount=32;
 131   1       key_ready=0;
 132   1       nkp=0;
 133   1       start_buzzer=0;
 134   1      }
 135          
 136          void init_delay_1sec()
 137          {
 138   1       cnt_1sl=0x0e8;
 139   1       cnt_1sh=0x04;
 140   1       s1_over=1;
 141   1      }
 142          
 143          void delay_1sec()
 144          {
 145   1       if(s1_over!=1)
 146   1       {
 147   2        cnt_1sl--;
 148   2        if(cnt_1sl==0)
 149   2        {
 150   3         cnt_1sh--;
 151   3         if(cnt_1sh!=0)
 152   3         cnt_1sl=0x0ff;
 153   3         else
 154   3         {
 155   4              cnt_1sl=0x0e8;
 156   4              cnt_1sh=0x04;
 157   4              s1_over=1;
 158   4         }
 159   3        }
 160   2       }
 161   1      
 162   1      }
 163          
 164          void scanner()
 165          {
 166   1       switch (scan_no)
 167   1          {
 168   2                      case 0:
 169   2                                              sl1=0;
 170   2                                              sl2=1;
 171   2                                              sl3=1;
 172   2                                              sl4=1;
 173   2                                              adisp1();
 174   2                                              c=krl1;
 175   2                                              k1();
 176   2                                              scan_no=1;
 177   2                                              break;
 178   2                      
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 4   

 179   2                      case 1:
 180   2                                              c=krl2;
 181   2                                              k1();
 182   2                                              scan_no=2;
 183   2                                              break;
 184   2      
 185   2                      case 2:
 186   2                                              c=krl3;
 187   2                                              k1();
 188   2                                              scan_no=3;
 189   2                                              break;
 190   2      
 191   2                      case 3:
 192   2                                              disp_blank();
 193   2                                              c=krl4;
 194   2                                              k1();
 195   2                                              scan_no=4;
 196   2                                              break;
 197   2      
 198   2                      case 4:
 199   2                                              sl1=1;
 200   2                                              sl2=0;
 201   2                                              sl3=1;
 202   2                                              sl4=1;
 203   2                                              adisp2();
 204   2                                              c=krl1;
 205   2                                              k1();
 206   2                                              scan_no=5;
 207   2                                              break;
 208   2                      
 209   2                      case 5:
 210   2                                              c=krl2;
 211   2                                              k1();
 212   2                                              scan_no=6;
 213   2                                              break;
 214   2      
 215   2                      case 6:
 216   2                                              c=krl3;
 217   2                                              k1();
 218   2                                              scan_no=7;
 219   2                                              break;
 220   2      
 221   2                      case 7:
 222   2                                              disp_blank();
 223   2                                              c=krl4;
 224   2                                              k1();
 225   2                                              scan_no=8;
 226   2                                              break;
 227   2                      
 228   2                      case 8:
 229   2                                              sl1=1;
 230   2                                              sl2=1;
 231   2                                              sl3=0;
 232   2                                              sl4=1;
 233   2                                              adisp3();
 234   2                                              c=krl1;
 235   2                                              k1();
 236   2                                              scan_no=9;
 237   2                                              break;
 238   2                      
 239   2                      case 9:
 240   2                                              c=krl2;
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 5   

 241   2                                              k1();
 242   2                                              scan_no=10;
 243   2                                              break;
 244   2      
 245   2                      case 10:
 246   2                                              c=krl3;
 247   2                                              k1();
 248   2                                              scan_no=11;
 249   2                                              break;
 250   2      
 251   2                      case 11:
 252   2                                              disp_blank();
 253   2                                              c=krl4;
 254   2                                              k1();
 255   2                                              scan_no=12;
 256   2                                              break;                  
 257   2              
 258   2                      case 12:
 259   2                                              sl1=1;
 260   2                                              sl2=1;
 261   2                                              sl3=1;
 262   2                                              sl4=0;
 263   2                                              adisp4();
 264   2                                              c=krl1;
 265   2                                              k1();
 266   2                                              scan_no=13;
 267   2                                              break;
 268   2                      
 269   2                      case 13:
 270   2                                              c=krl2;
 271   2                                              k1();
 272   2                                              scan_no=14;
 273   2                                              break;
 274   2      
 275   2                      case 14:
 276   2                                              c=krl3;
 277   2                                              k1();
 278   2                                              scan_no=15;
 279   2                                              break;
 280   2      
 281   2                      case 15:
 282   2                                              c=krl4;
 283   2                                              k1();
 284   2                                              disp_blank();
 285   2                                              scan_no=0;
 286   2                                              break;
 287   2              }
 288   1      }
 289          
 290          void k1()
 291          {
 292   1       if(key_ready==1)
 293   1              {
 294   2                      if(c==0)
 295   2                      {
 296   3                       krcount=32;
 297   3                      }
 298   2                      else
 299   2                      {
 300   3                       krcount=krcount-1;
 301   3                              
 302   3                              if(krcount==0)
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 6   

 303   3                              {
 304   4                               nkp=1;
 305   4                               start_buzzer=0;
 306   4                               krcount=32;
 307   4                              }
 308   3                      }
 309   2                }
 310   1      else if(dcount==33)
 311   1              {
 312   2                      if(c==0)
 313   2                      {
 314   3                       dcount=dcount-1;
 315   3                       key_code=scan_no;
 316   3                      }
 317   2                      //else return;
 318   2              }
 319   1      
 320   1      else 
 321   1       {
 322   2       dcount=dcount-1;
 323   2               if(dcount==0)
 324   2                      {
 325   3                       if(c==0)
 326   3                              {
 327   4                               key_ready=1;
 328   4                               start_buzzer=1;
 329   4                               dcount=33;
 330   4                              }
 331   3                       else dcount=33;
 332   3                      }
 333   2       }
 334   1      
 335   1      }
 336            
 337          void disp_blank()
 338          {
 339   1       P0=0x00;
 340   1      }
 341          
 342          void adisp1()
 343          {
 344   1       k=ds1-'0';
 345   1       P0=disp[k];
 346   1      }
 347          
 348          void adisp2()
 349          {
 350   1       k=ds2-'0';
 351   1       P0=disp[k];
 352   1      }
 353          
 354          void adisp3()
 355          {
 356   1       k=ds3-'0';
 357   1       P0=disp[k];
 358   1      }
 359          
 360          void adisp4()
 361          {
 362   1       k=ds4-'0';
 363   1       P0=disp[k];
 364   1      }
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 7   

 365          
 366          
 367          void delay(unsigned int del)
 368          {
 369   1      int d1,d2;
 370   1       for(d1=0;d1<=del;d1++)
 371   1              for(d2=0;d2<=120;d2++);
 372   1      }
 373          
 374                    
 375          
 376          void incrementd()
 377          {
 378   1      
 379   1       if(start_sw==1)
 380   1       {
 381   2              if (stop_sw!=1)
 382   2              {
 383   3               ds1=ds1+1;
 384   3               if (ds1>'9')
 385   3      
 386   3       {
 387   4              ds1='0';
 388   4              ds2=ds2+1;
 389   4      
 390   4                      if (ds2>'9')
 391   4                      {
 392   5                              ds2='0';
 393   5                              ds3=ds3+1;
 394   5      
 395   5                                      if (ds3>'9')
 396   5                                      {
 397   6                                              ds3='0';
 398   6                                              ds4=ds4+1;
 399   6      
 400   6                                              if(ds4>'9')
 401   6                                              {
 402   7                                               ds1='0';
 403   7                                               ds2='0';
 404   7                                               ds3='0';
 405   7                                               ds4='0';
 406   7                                              }
 407   6                                              
 408   6                                      }
 409   5                                      
 410   5                      }
 411   4                      
 412   4       }
 413   3      }
 414   2      }
 415   1      if(key_code=='A')
 416   1      { 
 417   2       if(name[0]==ds4&&name[1]==ds3&&name[2]==ds2&&name[3]==ds1)
 418   2       {
 419   3        start_sw=0;
 420   3        stop_sw=1;
 421   3       }
 422   2       }
 423   1      
 424   1      }
 425          
 426          void key_release()
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 8   

 427          {
 428   1       while(nkp!=1);
 429   1       key_ready=0;
 430   1       nkp=0;
 431   1      }
 432          
 433          void buzzer()
 434          {
 435   1       if(start_buzzer==1)
 436   1       buzz=~buzz;
 437   1      }
 438          
 439          void get_key()
 440          {
 441   1       while(key_ready!=1); 
 442   1       a=key_code;
 443   1       key_code=ascii_tab[a];
 444   1      }
 445          
 446          void keyprocess()
 447          {
 448   1       switch(key_code)
 449   1              {
 450   2               case 'A':
 451   2                                      process_a();
 452   2                                      break;
 453   2      
 454   2               case 'B' :
 455   2                                      process_b();
 456   2                                      break;
 457   2               case 'C' :
 458   2                                      process_c();
 459   2                                      break;
 460   2      
 461   2               case 'D' :     process_d();
 462   2                                      break;
 463   2              }
 464   1              key_release();
 465   1      }
 466          
 467          void process_a()
 468          {
 469   1       start_sw=1;
 470   1      }
 471          
 472          void process_b()
 473          {
 474   1       start_sw=0;
 475   1      }
 476          
 477          void process_c()
 478          {
 479   1       start_sw=0;
 480   1       ds1='0';
 481   1       ds2='0';
 482   1       ds3='0';
 483   1       ds4='0';
 484   1       stop_sw=0;
 485   1      }
 486          
 487          void process_d()
 488          {                       
C51 COMPILER V8.08   ET1                                                                   03/11/2000 13:46:33 PAGE 9   

 489   1       start_sw=0;
 490   1       ds1='0';
 491   1       ds2='0';
 492   1       ds3='0';
 493   1       ds4='0';
 494   1              for (i=0;i<=3;i++)
 495   1        {
 496   2         name[i]=get_key1();
 497   2         key_release();
 498   2        
 499   2        }
 500   1        ds4=name[0];
 501   1        ds3=name[1];
 502   1        ds2=name[2];
 503   1        ds1=name[3];
 504   1      
 505   1        delay(3000);
 506   1      
 507   1        ds1=ds2=ds3=ds4='0';
 508   1      }
 509          
 510          void disp_sw()
 511          {
 512   1       ds1='9'+1;
 513   1       ds2='9'+1;
 514   1       ds3='0';
 515   1       ds4='5';
 516   1      }
 517          
 518          void initial_blink()
 519          {
 520   1       P0=0xff;
 521   1       delay(100);
 522   1       P0=0x00;
 523   1       delay(100);
 524   1      }
 525          
 526          unsigned char get_key1()
 527          {
 528   1         while (key_ready!=1);
 529   1         first=key_code;
 530   1         first=ascii_tab[first];
 531   1         
 532   1         return (first);  
 533   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     96    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
