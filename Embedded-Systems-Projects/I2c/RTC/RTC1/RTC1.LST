C51 COMPILER V9.00   RTC1                                                                  01/01/2002 16:52:14 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE RTC1
OBJECT MODULE PLACED IN RTC1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE RTC1.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51f.h>
   2          #include<i2c.h>
   3          
   4          
   5          unsigned char secs,mins,hours,sec1,sec2,hours1,hours2,mins1,mins2;
   6          int i;
   7          
   8          void wr_rtc();
   9          void read_rtc();
  10          void display();
  11          
  12          
  13          void main()
  14          {
  15   1       init_lcd();
  16   1       wr_rtc();
  17   1       
  18   1       while(1)
  19   1       {
  20   2        read_rtc();
  21   2        display();
  22   2       }
  23   1      }
  24          
  25          void wr_rtc()
  26          {
  27   1       start_i2c();
  28   1      
  29   1       shout_i2c(0xA2); //device address and write mode
  30   1       ack_i2c();
  31   1      
  32   1       shout_i2c(0x00); //control status 1 address
  33   1       ack_i2c();
  34   1      
  35   1       shout_i2c(0x00); //control status 1 data
  36   1       ack_i2c();
  37   1      
  38   1       shout_i2c(0x00); //control status 2 data
  39   1       ack_i2c();
  40   1      
  41   1       shout_i2c(0x55); //seconds
  42   1       ack_i2c();
  43   1      
  44   1       shout_i2c(0x59); //mins
  45   1       ack_i2c();
  46   1      
  47   1       shout_i2c(0x12); //hours
  48   1       ack_i2c();
  49   1      
  50   1       stop_i2c();
  51   1      
  52   1      }
  53          
  54          void read_rtc()
  55          {
C51 COMPILER V9.00   RTC1                                                                  01/01/2002 16:52:14 PAGE 2   

  56   1       start_i2c();
  57   1      
  58   1       shout_i2c(0xA2); //device address and write mode
  59   1       ack_i2c();
  60   1      
  61   1       shout_i2c(0x02); //sec reg address
  62   1       ack_i2c();
  63   1      
  64   1       //shout_i2c(0x00); //control status 1 data
  65   1       //ack_i2c();
  66   1      
  67   1       //shout_i2c(0x00); //control status 2 data
  68   1       //ack_i2c();
  69   1      
  70   1       start_i2c();
  71   1      
  72   1       shout_i2c(0xA3); //device address and read mode
  73   1       ack_i2c();
  74   1       
  75   1       secs=shin_i2c();
  76   1       ack_i2c();
  77   1       secs=secs&0x7f;
  78   1       
  79   1       mins=shin_i2c();
  80   1       ack_i2c();
  81   1       mins=mins&0x7f;
  82   1      
  83   1       hours=shin_i2c();
  84   1       nack_i2c();
  85   1       hours=hours&0x3f;
  86   1       
  87   1       stop_i2c();
  88   1      
  89   1      }
  90          
  91          void display()
  92          {
  93   1       cmd_wr(0x80);
  94   1       delay(2);
  95   1       
  96   1        hours1=hours&0xf0;
  97   1        hours1=hours1>>4;
  98   1        hours2=hours&0x0f;
  99   1      
 100   1        mins1=mins&0xf0;
 101   1        mins1=mins1>>4;
 102   1        mins2=mins&0x0f;
 103   1      
 104   1        sec1=secs&0xf0;
 105   1        sec1=sec1>>4;
 106   1        sec2=secs&0x0f;
 107   1        
 108   1      
 109   1        data_wr(hours1+'0');
 110   1        delay(2);
 111   1      
 112   1        data_wr(hours2+'0');
 113   1        delay(2);
 114   1      
 115   1        data_wr(':');
 116   1        delay(2);
 117   1      
C51 COMPILER V9.00   RTC1                                                                  01/01/2002 16:52:14 PAGE 3   

 118   1        data_wr(mins1+'0');
 119   1        delay(2);
 120   1      
 121   1        data_wr(mins2+'0');
 122   1        delay(2);               
 123   1      
 124   1        data_wr(':');
 125   1        delay(2);
 126   1      
 127   1        data_wr(sec1+'0');
 128   1        delay(2);
 129   1      
 130   1        data_wr(sec2+'0');
 131   1        delay(2);
 132   1      
 133   1      }
 134          
 135          
 136          
 137          
 138          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    669    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
