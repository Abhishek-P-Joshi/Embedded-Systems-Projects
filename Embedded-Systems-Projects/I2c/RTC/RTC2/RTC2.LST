C51 COMPILER V9.00   RTC2                                                                  01/02/2002 17:03:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE RTC2
OBJECT MODULE PLACED IN RTC2.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE RTC2.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51f.h>
   2          #include<i2c.h>
   3          
   4          
   5          unsigned char secs,mins,hours,sec1,sec2,hours1,hours2,mins1,mins2;
   6          unsigned char days,weekdays,months,year,days1,days2,mon1,mon2,year1,year2;
   7          unsigned char wk4[3]={"WED"},wk1[3]={"SUN"},wk2[3]={"MON"},wk3[3]={"TUE"},wk5[3]={"THU"},wk6[3]={"FRI"},wk
             -7[3]={"SAT"};
   8          int i;
   9          
  10          void wr_rtc();
  11          void read_rtc();
  12          void display();
  13          
  14          
  15          void main()
  16          {
  17   1       init_lcd();
  18   1       wr_rtc();
  19   1       
  20   1       while(1)
  21   1       {
  22   2        read_rtc();
  23   2        display();
  24   2       }
  25   1      }
  26          
  27          void wr_rtc()
  28          {
  29   1       start_i2c();
  30   1      
  31   1       shout_i2c(0xA2); //device address and write mode
  32   1       ack_i2c();
  33   1      
  34   1       shout_i2c(0x00); //control status 1 address
  35   1       ack_i2c();
  36   1      
  37   1       shout_i2c(0x00); //control status 1 data
  38   1       ack_i2c();
  39   1      
  40   1       shout_i2c(0x00); //control status 2 data
  41   1       ack_i2c();
  42   1      
  43   1       shout_i2c(0x50); //seconds
  44   1       ack_i2c();
  45   1      
  46   1       shout_i2c(0x59); //mins
  47   1       ack_i2c();
  48   1      
  49   1       shout_i2c(0x23); //hours
  50   1       ack_i2c();
  51   1      
  52   1       shout_i2c(0x31); //days
  53   1       ack_i2c();
  54   1      
C51 COMPILER V9.00   RTC2                                                                  01/02/2002 17:03:58 PAGE 2   

  55   1       shout_i2c(0x03); //weekdays
  56   1       ack_i2c();
  57   1      
  58   1       shout_i2c(0x12); //months
  59   1       ack_i2c();
  60   1      
  61   1       shout_i2c(0x15); //year
  62   1       ack_i2c();
  63   1      
  64   1       stop_i2c();
  65   1      
  66   1      }
  67          
  68          void read_rtc()
  69          {
  70   1       start_i2c();
  71   1      
  72   1       shout_i2c(0xA2); //device address and write mode
  73   1       ack_i2c();
  74   1      
  75   1       shout_i2c(0x02); //sec reg address
  76   1       ack_i2c();
  77   1      
  78   1       //shout_i2c(0x00); //control status 1 data
  79   1       //ack_i2c();
  80   1      
  81   1       //shout_i2c(0x00); //control status 2 data
  82   1       //ack_i2c();
  83   1      
  84   1       start_i2c();
  85   1      
  86   1       shout_i2c(0xA3); //device address and read mode
  87   1       ack_i2c();
  88   1       
  89   1       secs=shin_i2c();
  90   1       ack_i2c();
  91   1       secs=secs&0x7f;
  92   1       
  93   1       mins=shin_i2c();
  94   1       ack_i2c();
  95   1       mins=mins&0x7f;
  96   1      
  97   1       hours=shin_i2c();
  98   1       ack_i2c();
  99   1       hours=hours&0x3f;
 100   1      
 101   1       days=shin_i2c();
 102   1       ack_i2c();
 103   1       days=days&0x3f;
 104   1      
 105   1       weekdays=shin_i2c();
 106   1       ack_i2c();
 107   1       weekdays=weekdays&0x07;
 108   1      
 109   1       months=shin_i2c();
 110   1       ack_i2c();
 111   1       months=months&0x1f;
 112   1      
 113   1       year=shin_i2c();
 114   1       nack_i2c();
 115   1       
 116   1       stop_i2c();
C51 COMPILER V9.00   RTC2                                                                  01/02/2002 17:03:58 PAGE 3   

 117   1      
 118   1      }
 119          
 120          void display()
 121          {
 122   1       cmd_wr(0x80);
 123   1       delay(2);
 124   1       
 125   1        hours1=hours&0xf0;
 126   1        hours1=hours1>>4;
 127   1        hours2=hours&0x0f;
 128   1      
 129   1        mins1=mins&0xf0;
 130   1        mins1=mins1>>4;
 131   1        mins2=mins&0x0f;
 132   1      
 133   1        sec1=secs&0xf0;
 134   1        sec1=sec1>>4;
 135   1        sec2=secs&0x0f;
 136   1        
 137   1        days1=days&0xf0;
 138   1        days1=days1>>4;
 139   1        days2=days&0x0f;
 140   1      
 141   1        mon1=months&0xf0;
 142   1        mon1=mon1>>4;
 143   1        mon2=months&0x0f;
 144   1      
 145   1        year1=year&0xf0;
 146   1        year1=year1>>4;
 147   1        year2=year&0x0f;
 148   1      
 149   1          
 150   1        data_wr(hours1+'0');
 151   1        delay(2);
 152   1      
 153   1        data_wr(hours2+'0');
 154   1        delay(2);
 155   1      
 156   1        data_wr(':');
 157   1        delay(2);
 158   1      
 159   1        data_wr(mins1+'0');
 160   1        delay(2);
 161   1      
 162   1        data_wr(mins2+'0');
 163   1        delay(2);                      
 164   1      
 165   1        data_wr(':');
 166   1        delay(2);
 167   1      
 168   1        data_wr(sec1+'0');
 169   1        delay(2);
 170   1      
 171   1        data_wr(sec2+'0');
 172   1        delay(2);
 173   1      
 174   1        cmd_wr(0xC0);
 175   1      
 176   1        data_wr(days1+'0');
 177   1        delay(2);
 178   1      
C51 COMPILER V9.00   RTC2                                                                  01/02/2002 17:03:58 PAGE 4   

 179   1        data_wr(days2+'0');
 180   1        delay(2);
 181   1      
 182   1        data_wr('/');
 183   1        delay(2);
 184   1      
 185   1        data_wr(mon1+'0');
 186   1        delay(2);
 187   1      
 188   1        data_wr(mon2+'0');
 189   1        delay(2);
 190   1      
 191   1        data_wr('/');
 192   1        delay(2);
 193   1      
 194   1        data_wr(year1+'0');
 195   1        delay(2);
 196   1      
 197   1        data_wr(year2+'0');
 198   1        delay(2);
 199   1      
 200   1        cmd_wr(0x8D);
 201   1        
 202   1        if(weekdays==0x00)
 203   1              {
 204   2                      for(i=0;i<=2;i++)
 205   2              {
 206   3              data_wr(wk1[i]);
 207   3              delay(2);
 208   3              }       
 209   2               }
 210   1        if(weekdays==0x01)
 211   1                      {
 212   2                        for(i=0;i<=2;i++)
 213   2                      {
 214   3                              data_wr(wk2[i]);
 215   3                              delay(2);
 216   3                      }       
 217   2                       }
 218   1       if(weekdays==0x02)
 219   1                       {
 220   2                                for(i=0;i<=2;i++)
 221   2                        {
 222   3                              data_wr(wk3[i]);
 223   3                              delay(2);
 224   3                        }     
 225   2                       }
 226   1               
 227   1      if(weekdays==0x03)
 228   1      {
 229   2                         for(i=0;i<=2;i++)
 230   2            {
 231   3             data_wr(wk4[i]);
 232   3             delay(2);
 233   3            } 
 234   2      
 235   2      }
 236   1      
 237   1      if(weekdays==0x04)
 238   1                        {
 239   2                         for(i=0;i<=2;i++)
 240   2            {
C51 COMPILER V9.00   RTC2                                                                  01/02/2002 17:03:58 PAGE 5   

 241   3             data_wr(wk5[i]);
 242   3             delay(2);
 243   3            } 
 244   2                        }
 245   1      
 246   1      if(weekdays==0x05)
 247   1                        {
 248   2                         for(i=0;i<=2;i++)
 249   2            {
 250   3             data_wr(wk6[i]);
 251   3             delay(2);
 252   3            } 
 253   2                         }
 254   1      
 255   1      if(weekdays==0x06)
 256   1                      {
 257   2                       for(i=0;i<=2;i++)
 258   2            {
 259   3             data_wr(wk7[i]);
 260   3             delay(2);
 261   3            } 
 262   2                      }
 263   1      
 264   1      }
 265          
 266          
 267          
 268          
 269          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1085    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
